    {
            mv = cw.visitMethod(ACC_PROTECTED, "readLicense", "([B)V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, null);
            Label l3 = new Label();
            mv.visitTryCatchBlock(l2, l3, l2, null);
            Label l4 = new Label();
            Label l5 = new Label();
            Label l6 = new Label();
            mv.visitTryCatchBlock(l4, l5, l6, "java/lang/Exception");
            mv.visitLabel(l4);
            mv.visitLineNumber(853, l4);
            mv.visitTypeInsn(NEW, "java/io/ByteArrayInputStream");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, "java/io/ByteArrayInputStream", "<init>", "([B)V", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l0);
            mv.visitLineNumber(855, l0);
            mv.visitTypeInsn(NEW, "java/util/Properties");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/util/Properties", "<init>", "()V", false);
            mv.visitVarInsn(ASTORE, 3);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitLineNumber(856, l7);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "load", "(Ljava/io/InputStream;)V", false);
            Label l8 = new Label();
            mv.visitLabel(l8);
            mv.visitLineNumber(857, l8);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "com/jp/protection/pub/LicenseImpl");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "com/jp/protection/pub/LicenseImpl", "<init>", "()V", false);
            mv.visitFieldInsn(PUTFIELD, "com/jp/protection/pub/LicenseReader", "fLicense", "Lcom/jp/protection/pub/License;");
            Label l9 = new Label();
            mv.visitLabel(l9);
            mv.visitLineNumber(858, l9);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/jp/protection/pub/LicenseReader", "fLicense", "Lcom/jp/protection/pub/License;");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKESTATIC, "com/jp/protection/utils/LicenseUtils", "load", "(Lcom/jp/protection/pub/License;Ljava/util/Properties;)V", false);
            mv.visitLabel(l1);
            mv.visitLineNumber(860, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
            Label l10 = new Label();
            mv.visitLabel(l10);
            mv.visitLineNumber(861, l10);
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l2);
            mv.visitLineNumber(860, l2);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitLabel(l3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
            Label l11 = new Label();
            mv.visitLabel(l11);
            mv.visitLineNumber(861, l11);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l5);
            mv.visitLineNumber(865, l5);
            Label l12 = new Label();
            mv.visitJumpInsn(GOTO, l12);
            mv.visitLabel(l6);
            mv.visitLineNumber(862, l6);
            mv.visitVarInsn(ASTORE, 2);
            Label l13 = new Label();
            mv.visitLabel(l13);
            mv.visitLineNumber(863, l13);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ACONST_NULL);
            mv.visitFieldInsn(PUTFIELD, "com/jp/protection/pub/LicenseReader", "fLicense", "Lcom/jp/protection/pub/License;");
            Label l14 = new Label();
            mv.visitLabel(l14);
            mv.visitLineNumber(864, l14);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/jp/protection/pub/LicenseReader", "error", "(Ljava/lang/Throwable;)V", false);
            mv.visitLabel(l12);
            mv.visitLineNumber(866, l12);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 5);
            mv.visitEnd();
        }